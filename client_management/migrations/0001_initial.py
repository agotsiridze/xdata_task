# Generated by Django 4.2.6 on 2023-10-23 16:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('tts_enabled', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'clients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sitename', models.CharField(max_length=128, unique=True)),
                ('internal_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'sites',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Filterwords',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('word', models.CharField(blank=True, max_length=255, null=True)),
                ('wordalias', models.CharField(blank=True, db_column='wordAlias', max_length=1022, null=True)),
                ('subwordalias', models.CharField(blank=True, max_length=255, null=True)),
                ('stopword', models.CharField(blank=True, max_length=255, null=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='client_management.clients')),
            ],
            options={
                'db_table': 'filterwords',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='clients',
            name='filterwordsid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client_management.filterwords'),
        ),
        migrations.AddField(
            model_name='clients',
            name='siteid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client_management.sites'),
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('article_date', models.DateTimeField()),
                ('autor', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.CharField(max_length=1022)),
                ('article_name', models.TextField()),
                ('article_text', models.TextField()),
                ('visitors_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_top_artikle', models.IntegerField()),
                ('screenshot_url', models.CharField(blank=True, max_length=90, null=True)),
                ('status', models.IntegerField(blank=True, default=1, null=True)),
                ('found_word', models.CharField(blank=True, max_length=255, null=True)),
                ('clientid', models.ForeignKey(db_column='clientid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='client_management.clients')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='client_management.sites')),
            ],
            options={
                'db_table': 'articles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sms', models.CharField(blank=True, max_length=255, null=True)),
                ('telegram', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='client_management.clients')),
            ],
            options={
                'db_table': 'notifications',
                'managed': True,
                'indexes': [models.Index(fields=['clientid'], name='notificatio_clienti_df244b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='filterwords',
            index=models.Index(fields=['clientid'], name='filterwords_clienti_4ac80d_idx'),
        ),
        migrations.AddIndex(
            model_name='filterwords',
            index=models.Index(fields=['word'], name='filterwords_word_476de2_idx'),
        ),
        migrations.AddIndex(
            model_name='clients',
            index=models.Index(fields=['username'], name='clients_usernam_14632b_idx'),
        ),
        migrations.AddIndex(
            model_name='clients',
            index=models.Index(fields=['siteid'], name='clients_siteid__42aa71_idx'),
        ),
        migrations.AddIndex(
            model_name='articles',
            index=models.Index(fields=['site_id'], name='articles_site_id_65d78b_idx'),
        ),
        migrations.AddIndex(
            model_name='articles',
            index=models.Index(fields=['insert_date'], name='articles_insert__1a0894_idx'),
        ),
        migrations.AddIndex(
            model_name='articles',
            index=models.Index(fields=['article_date'], name='articles_article_cdc4c1_idx'),
        ),
        migrations.AddIndex(
            model_name='articles',
            index=models.Index(fields=['clientid'], name='articles_clienti_a55f5f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='articles',
            unique_together={('url', 'clientid'), ('id', 'site')},
        ),
    ]
